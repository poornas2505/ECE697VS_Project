LIB "teachstd.lib";
LIB "general.lib";
LIB "schubert.lib";
LIB "findifs.lib";
ring r = (8, a), (n16, n17, n14, n59, n56, n57, n55, n52, n53, n30, n32, n33, n36, n37, n58, n_n48, n_n49, dk17_in_0_, n49, n19, n60, n41, n40, n43, n45, n47, n46, n29, n26, n24, n_n50, dk17_in_1_, S, T), lp;
ideal from, to, new;
ideal reached;
ideal J;
ideal G;
ideal J0 = T^8+T;
ideal ideal_quotient;
ideal temp;

poly f_0 = n14 + n_n50 * n43 + n_n50;
poly f_1 = n19 + n49 + n46 + n47 + n49 * n46 + n46 * n47 + n49 * n47 + n49 * n46 * n47;
poly f_2 = n24 + n55 + n60 + n53 + n55 * n60 + n60 * n53 + n55 * n53 + n55 * n60 * n53;
poly f_3 = n16 + n_n48 * n_n50;
poly f_4 = n17 + 1 + n_n48 + n_n50 + n_n48 * n_n50;
poly f_5 = n26 + dk17_in_0_ * n_n48 + dk17_in_0_;
poly f_6 = n29 + 1 + n_n49 + n_n50 + n_n49 * n_n50;
poly f_7 = n30 + dk17_in_1_ * n29 + dk17_in_1_;
poly f_8 = n32 + n_n48 * n_n49 * (n_n50 + 1);
poly f_9 = n33 + 1 + n30 + n32 + n30 * n32;
poly f_10 = n36 + 1 + n_n49 + n26 + n_n49 * n26;
poly f_11 = n37 + dk17_in_0_ * n_n49;
poly f_12 = n40 + n_n48 * n_n49 + n_n48;
poly f_13 = n41 + 1 + dk17_in_0_ + n_n48 + dk17_in_0_ * n_n48;
poly f_14 = n43 + (dk17_in_1_ + 1) * (n40 + 1) * (n41 + 1);
poly f_15 = n45 + 1 + n16 + n26 + n16 * n26;
poly f_16 = n46 + 1 + dk17_in_1_ + n45 + dk17_in_1_ * n45;
poly f_17 = n47 + dk17_in_0_ * n17;
poly f_18 = n49 + (dk17_in_0_ + 1) * n_n49 * (n_n50 + 1);
poly f_19 = n52 + n_n48 * (dk17_in_1_ + 1) * dk17_in_0_;
poly f_20 = n53 + n_n50 * n52;
poly f_21 = n55 + (n_n50 + 1) * n_n49 * n26;
poly f_22 = n56 + n_n50 * n26 + n_n50;
poly f_23 = n57 + 1 + n_n49 + n56 + n_n49 * n56;
poly f_24 = n58 + n_n48 * n_n50 + n_n48;
poly f_25 = n59 + 1 + n57 + n58 + n57 * n58;
poly f_26 = n60 + dk17_in_1_ * n59 + dk17_in_1_;
poly f_van_27 = n16^2 - n16;
poly f_van_28 = n17^2 - n17;
poly f_van_29 = n14^2 - n14;
poly f_van_30 = n59^2 - n59;
poly f_van_31 = n56^2 - n56;
poly f_van_32 = n57^2 - n57;
poly f_van_33 = n55^2 - n55;
poly f_van_34 = n52^2 - n52;
poly f_van_35 = n53^2 - n53;
poly f_van_36 = n30^2 - n30;
poly f_van_37 = n32^2 - n32;
poly f_van_38 = n33^2 - n33;
poly f_van_39 = n36^2 - n36;
poly f_van_40 = n37^2 - n37;
poly f_van_41 = n58^2 - n58;
poly f_van_42 = n_n48^2 - n_n48;
poly f_van_43 = n_n49^2 - n_n49;
poly f_van_44 = dk17_in_0_^2 - dk17_in_0_;
poly f_van_45 = n49^2 - n49;
poly f_van_46 = n19^2 - n19;
poly f_van_47 = n60^2 - n60;
poly f_van_48 = n41^2 - n41;
poly f_van_49 = n40^2 - n40;
poly f_van_50 = n43^2 - n43;
poly f_van_51 = n45^2 - n45;
poly f_van_52 = n47^2 - n47;
poly f_van_53 = n46^2 - n46;
poly f_van_54 = n29^2 - n29;
poly f_van_55 = n26^2 - n26;
poly f_van_56 = n24^2 - n24;
poly f_van_57 = n_n50^2 - n_n50;
poly f_van_58 = dk17_in_1_^2 - dk17_in_1_;
poly f_van_59 = T^8- T;
poly f_van_60 = S^8- S;
poly f_61 = S+n_n48+n_n49*a+n_n50*a^2;
poly f_62 = T+n14+n19*a+n24*a^2;

ideal poly_func = f_0,  f_1,  f_2,  f_3,  f_4,  f_5,  f_6,  f_7,  f_8,  f_9,  f_10,  f_11,  f_12,  f_13,  f_14,  f_15,  f_16,  f_17,  f_18,  f_19,  f_20,  f_21,  f_22,  f_23,  f_24,  f_25,  f_26,  f_van_27,  f_van_28,  f_van_29,  f_van_30,  f_van_31,  f_van_32,  f_van_33,  f_van_34,  f_van_35,  f_van_36,  f_van_37,  f_van_38,  f_van_39,  f_van_40,  f_van_41,  f_van_42,  f_van_43,  f_van_44,  f_van_45,  f_van_46,  f_van_47,  f_van_48,  f_van_49,  f_van_50,  f_van_51,  f_van_52,  f_van_53,  f_van_54,  f_van_55,  f_van_56,  f_van_57,  f_van_58,  f_van_59,  f_van_60,  f_61,  f_62;

from[1] = S-0;
reached = subst(from[1],S,T);
reached;
int i = 0;
while(1){
        i++;
        J = poly_func,from[i];
        G = groebner(J);
        G;
        to[i] = G[1];
        "To ", i;
        to[i];
        ideal_quotient = quotient(J0,reached);
        printf("Ideal quotient: ");
        ideal_quotient;
        //temp = to[i]+ideal_quotient;
        temp = groebner(to[i]+ideal_quotient);
        new[i] = temp[1];
        printf("Newly reached states: ");
        new[i];
        if(new[i] == 1 || i > 25) {
            break;
            }
        reached = product(reached,new[i]);
        printf("Reached state polynomial: ");
        reached;
        from[i+1] = subst(new[i],T,S);
}

"BFS Depth", i-2;
"Final reachable states: ", reached;
